<?xml version="1.0" encoding="UTF-8"?>
<driver-configuration dn="DHCP.Driverset.Services.YourOrganization" driver-set-dn="Driverset.Services.YourOrganization" name="DHCP">
   <variable-decl>

       <text-var var-name="DHCP.RemoteHost"
             description="xlfid(RemoteHostDescr)Specify the host name or IP address and port number where the driver is running. The default port number is 8090. [Host Name or IP Address and Port; ###.###.###.###:####]"
             highlight="[]-"
             prompt="xlfid(RemoteHostPrompt)Remote Host Name and Port:"
             prompt-mandatory="true"
             prompt-type="ipa">xlfid(RemoteHostValue):8090</text-var>

       <text-var var-name="DHCP.RemotePwd"
             description="xlfid(RemotePswdDescr)The Remote Loader password is used to control access to the Remote Loader instance. It must be the same password that is specified as the Remote Loader password on the Remote Loader."
             highlight="[]-"
             prompt="xlfid(RemotePswdPrompt)Remote Loader Password:"
             prompt-mandatory="true"
             prompt-type="password"/>

       <text-var var-name="DHCP.DriverPwd"
             description="xlfid(DriverPswdDescr)The Driver Object Password is used by the Remote Loader to authenticate itself to the Metadirectory server. It must be the same password that is specified as the Driver Object Password on the Remote Loader."
             highlight="[]-"
             prompt="xlfid(DriverPswdPrompt)Driver Object Password:"
             prompt-mandatory="true"
             prompt-type="password"/>

       <text-var var-name="DHCP.NetworkDevicesContainer"
             browse="yes"
             description="xlfid(NetworkDevicesContainer)Container used to discover and provision Network Devices"
             highlight="[]-"
             prompt="xlfid(NetworkDevicesContainerPrompt)DN:"
             prompt-mandatory="true"/>

       <node-var var-name="DHCP.Remote" node-name="#Text">REMOTE(hostname=<variable-ref var-name="DHCP.RemoteHost" part="ipa"/> port=<variable-ref var-name="DHCP.RemoteHost" part="port"/> kmo="SSL CertificateIP")</node-var>
       <node-var var-name="DHCP.Remote.Pwd" node-name="#Text">REMOTE(<variable-ref var-name="DHCP.RemotePwd"/>)</node-var>

   </variable-decl>

	<attributes>
		<configuration-manifest>
			<manifest name="SCRIPTING">
				<capability name="password-subscribe"/>
				<capability name="password-publish"/>
				<capability name="password-check"/>
			</manifest>
		</configuration-manifest>
		<driver-filter-xml>
			<filter>
				<filter-class class-name="DirXMLjnsuNetworkDevice" publisher="sync" publisher-create-homedir="true" publisher-track-template-member="false" subscriber="sync">
					<filter-attr attr-name="DirXMLjnsuDDNSPrefix" merge-authority="none" publisher="ignore" publisher-optimize-modify="true" subscriber="sync"/>
					<filter-attr attr-name="DirXMLjnsuDeviceName" merge-authority="app" publisher="sync" publisher-optimize-modify="true" subscriber="sync"/>
					<filter-attr attr-name="DirXMLjnsuHWAddress" merge-authority="app" publisher="sync" publisher-optimize-modify="true" subscriber="sync"/>
					<filter-attr attr-name="DirXMLjnsuMDisabled" from-all-classes="true" merge-authority="none" publisher="ignore" publisher-optimize-modify="true" subscriber="sync"/>
					<filter-attr attr-name="DirXMLjnsuNvrExpires" from-all-classes="true" merge-authority="none" publisher="ignore" publisher-optimize-modify="true" subscriber="sync"/>
					<filter-attr attr-name="DirXMLjnsuDHCPAddress" from-all-classes="true" merge-authority="app" publisher="sync" publisher-optimize-modify="true" subscriber="ignore"/>
					<filter-attr attr-name="DirXMLjnsuDisabled" from-all-classes="true" merge-authority="none" publisher="ignore" publisher-optimize-modify="true" subscriber="sync"/>
					<filter-attr attr-name="DirXMLjnsuRegVersion" from-all-classes="true" merge-authority="none" publisher="ignore" publisher-optimize-modify="true" subscriber="sync"/>
					<filter-attr attr-name="DirXMLjnsuStaticAddr" merge-authority="none" publisher="ignore" publisher-optimize-modify="true" subscriber="sync"/>
					<filter-attr attr-name="DirXMLjnsuStaticAddrs" merge-authority="none" publisher="ignore" publisher-optimize-modify="true" subscriber="sync"/>
				</filter-class>
			</filter>
		</driver-filter-xml>
		<driver-image></driver-image>
		<log-events inherit="true"/>
		<trace-file value=""/>
		<trace-size-limit value=""/>
		<trace-level value=""/>
		<driver-trace-level inherit="true"/>
		<log-limit inherit="true"/>
		<java-module value="com.novell.nds.dirxml.remote.driver.DriverShimImpl"/>
		<policy-linkage>
			<linkage-item dn="Schema Mapping.DHCP.Driverset.Services.YourOrganization" order="0" policy-set="0" policy-set-name="Schema Mapping"/>
			<linkage-item dn="Remove Duplicate dirXMLjnsuDHCPAddress values.DHCP.Driverset.Services.YourOrganization" order="0" policy-set="1" policy-set-name="Input"/>
			<linkage-item dn="Event Transform Policy.Subscriber.DHCP.Driverset.Services.YourOrganization" order="0" policy-set="4" policy-set-name="Subscriber Event"/>
			<linkage-item dn="Matching Policy.Subscriber.DHCP.Driverset.Services.YourOrganization" order="0" policy-set="6" policy-set-name="Subscriber Matching"/>
			<linkage-item dn="Matching Policy.Publisher.DHCP.Driverset.Services.YourOrganization" order="0" policy-set="7" policy-set-name="Publisher Matching"/>
			<linkage-item dn="Create Policy.Subscriber.DHCP.Driverset.Services.YourOrganization" order="0" policy-set="8" policy-set-name="Subscriber Create"/>
			<linkage-item dn="Add all attributes to add and modify events.Subscriber.DHCP.Driverset.Services.YourOrganization" order="0" policy-set="10" policy-set-name="Subscriber Command"/>
			<linkage-item dn="Placement Policy.Publisher.DHCP.Driverset.Services.YourOrganization" order="0" policy-set="13" policy-set-name="Publisher Placement"/>
		</policy-linkage>
		<driver-cache-limit value="0"/>
                <shim-auth-server>
                        <variable-ref attr-name="value" var-name="DHCP.Remote"/>
                </shim-auth-server>
                <shim-auth-password>
                  <variable-ref attr-name="password" var-name="DHCP.Remote.Pwd"/>
                </shim-auth-password>
                <driver-password>
                  <variable-ref attr-name="password" var-name="DHCP.DriverPwd"/>
                </driver-password>
		<driver-start-option no-resync="" value="1"/>
		<shim-config-info-xml>
			<driver-config name="Scripting Driver">
				<driver-options>
					<configuration-values>
						<definitions>
							<definition display-name="Automatic Loopback Detection:" name="auto-loopback-detection" type="enum">
								<description>Choose 'Yes' if you wish to enable automatic loopback detection or 'No' to disable automatic loopback detection</description>
								<value>true</value>
								<enum-choice display-name="Yes">true</enum-choice>
								<enum-choice display-name="No">false</enum-choice>
							</definition>
							<definition display-name="Script Command:" name="script-command" type="string">
								<description>The file to execute for Subscriber events. This path is relative from the scripts/ directory</description>
								<description>Enter the command line that the driver will use to execute scripts.</description>
								<value>cscript //nologo</value>
							</definition>
							<definition display-name="Script Trace File:" name="script-trace-file" type="string">
								<description>The file to execute for Subscriber events. This path is relative from the scripts/ directory</description>
								<description>Enter the path and file name for the script trace file.</description>
								<value>logs\script-trace.log</value>
							</definition>
						</definitions>
					</configuration-values>
				</driver-options>
				<subscriber-options>
					<configuration-values>
						<definitions>
							<definition display-name="Subscriber Script:" name="subscriber-script" type="string">
								<description>The file to execute for Subscriber events.</description>
								<value>subscriber.pl</value>
							</definition>
						</definitions>
					</configuration-values>
				</subscriber-options>
				<publisher-options>
					<configuration-values>
						<definitions>
							<definition display-name="Polling Script:" name="polling-script" type="string">
								<description>The Polling file to execute for Publisher events.</description>
								<value>poll.pl</value>
							</definition>
							<definition display-name="Heartbeat Script:" name="heartbeat-script" type="string">
								<description>The Polling file to execute for Heartbeat.</description>
								<value>heartbeat.pl</value>
							</definition>
							<definition display-name="Polling Interval (Seconds):" name="pub-polling-interval" type="string">
								<description>The Publisher Polling Interval.</description>
								<value>2</value>
							</definition>
							<definition display-name="Heartbeat Interval:" name="pub-heartbeat-interval" type="string">
								<description>The Publisher Heartbeat Interval.</description>
								<value>0</value>
							</definition>
						</definitions>
					</configuration-values>
				</publisher-options>
			</driver-config>
		</shim-config-info-xml>
		<global-engine-values>
			<configuration-values>
				<definitions>
					<definition display-name="Subscriber channel retry interval in seconds" display-name-ref="ecnm_rint" name="dirxml.engine.retry-interval" range-lo="1" type="integer">
						<description description-ref="ecds_rint">The subscriber channel retry interval controls how frequently the DirXML Engine will retry the processing of a cached transaction after the application shim's Subscriber object returns a retry status.</description>
						<value>30</value>
					</definition>
					<definition display-name="Qualified form for DN-syntax attribute values" display-name-ref="ecnm_dnvf" name="dirxml.engine.qualified-dn-values" type="boolean">
						<description description-ref="ecds_dnvf">The qualified form for DN-syntax attribute values controls whether values for DN-syntax attribute values are presented in unqualified slash form or qualified slash form. A "true" setting means the values are presented in qualified form.</description>
						<value>false</value>
					</definition>
					<definition display-name="Qualified form for rename events" display-name-ref="ecnm_refm" name="dirxml.engine.qualified-rename-values" type="boolean">
						<description description-ref="ecds_refm">The qualified form for rename events controls whether the new-name portion of rename events coming from the Identity Vault are presented to the Subscriber channel with type qualifier(s) (e.g. CN=). A "true" setting means the names are presented in qualified form.</description>
						<value>false</value>
					</definition>
					<definition display-name="Maximum eDirectory replication wait time in seconds" display-name-ref="ecnm_mrpw" name="dirxml.engine.max-replication-wait" range-lo="1" type="integer">
						<description description-ref="ecds_mrpw">The maximum eDirectory replication wait time controls the maximum time that the DirXML Engine will wait for a particular change to replicate between the local replica and a remote replica. This only affects operations where the DirXML Engine is required to contact a remote eDirectory server in the same tree to perform an operation and may need to wait until some change has replicated to or from the remote server before the operation can be completed (e.g. object moves when the DirXML server does not hold the master replica of the moved object ;file system rights operations for Users created from a template.)</description>
						<value>180</value>
					</definition>
					<definition display-name="Use non-compliant backwards-compatible mode for XSLT" display-name-ref="ecnm_xbcm" name="dirxml.engine.xslt-bc-mode" type="boolean">
						<description description-ref="ecds_xbcm">This control sets the XSLT processor used by the DirXML Engine to a backwards-compatible mode. The backwards-compatible mode causes the XSLT processor to use one or more behaviors that are not XPath 1.0 and/or XSLT 1.0 standards-compliant. This is done in the interest of backwards-compatiblity with existing DirXML stylesheets that depend on the non-standard behavior(s). 
 
 In particular: 
 
 The behavior of the XPath "!=" operator when one operand is a node-set and the other operand is other than a node-set is incorrect in DirXML releases up to and including DirXML 2.0 (Novell Identity Manager 2.0). This behavior has been corrected; however, the corrected behavior is disabled by default through this control in favor of backwards-compatibility with existing DirXML stylesheets.</description>
						<value>true</value>
					</definition>
					<definition display-name="Maximum application objects to migrate at once" display-name-ref="ecnm_mxappm" name="dirxml.engine.max-migrate-app-count" range-lo="1" type="integer">
						<description description-ref="ecds_mxappm">This control is used to limit the number of application objects that the DirXML Engine will request from an application during a single query that is performed as part of a "migrate objects from application" operation. 
 
 If "java.lang.OutOfMemoryError" errors are encountered during a migrate from application operation then this number should be set lower than the default. 
 
 Note that this control does not limit the number of application objects that can be migrated; it merely limits the "batch size".</description>
						<value>50</value>
					</definition>
					<definition display-name="Set creatorsName on objects created in Identity Vault" display-name-ref="ecnm_scrnm" name="dirxml.engine.set-creators-name" type="boolean">
						<description description-ref="ecds_scrnm">This control is used by the DirXML Engine to determine if the creatorsName attribute should be set to the DN of this driver on all objects created in the Identity Vault by this driver.
 
 Setting the creatorsName attribute allows for easily identifying objects created by this driver, but also carries a performance penalty. If not set, the creatorsName attribute will default to the DN of the NCP Server object that is hosting the driver.</description>
						<value>false</value>
					</definition>
					<definition display-name="Write pending associations" display-name-ref="ecnm_pass" name="dirxml.engine.use-pending-association" type="boolean">
						<description description-ref="ecds_pass">This control determines whether the DirXML Engine will write a pending association on an object during subscriber channel processing.
 
 Writing a pending association confers little or no benefit but does incur a performance penalty. Nevertheless, the option exists to turn it on for backward compatibility.</description>
						<value>false</value>
					</definition>
					<definition display-name="Use password event values" display-name-ref="ecnm_pevvl" name="dirxml.engine.use-password-event-values" type="boolean">
						<description description-ref="ecds_pevvl">This control determines the source of the value reported for the nspmDistributionPassword attribute for subscriber channel add and modify events.
 
 Setting the control to false means that the current value of nspmDistributionPassword is obtained and reported as the value of the attribute event. This means that only the current password value is available. This is the default behavior.
 
 Setting the control to true means that the value recorded with the eDirectory event will be decrypted and reported as the value of the attribute event. This means that both the old password value (if it exists) and the replacement password value at the time of the event are available. This is useful for synchronizing passwords to certain applications that require the old password to enable setting a new password.</description>
						<value>false</value>
					</definition>
					<definition display-name="Enable password synchronization status reporting" display-name-ref="ecnm_pss" name="dirxml.engine.pwd-sync-status" type="boolean">
						<description description-ref="ecds_pss">This control determines whether the DirXML Engine will report the status of subscriber channel password change events. 
 
 Reporting the status of subscriber channel password change events allows applications such as the Identity Manager User Application to monitor the synchronization progress of a password change that should be synchronized to the connected application.</description>
						<value>true</value>
					</definition>
				</definitions>
			</configuration-values>
		</global-engine-values>
		<global-config-values>
			<configuration-values>
				<definitions>
					<header display-name="Network Device Placement"/>
					<group>
						<definition display-name="Show Network Device Placement" name="placement-display" type="enum">
							<enum-choice display-name="Show">show</enum-choice>
							<enum-choice display-name="Hide">hide</enum-choice>
							<value>show</value>
						</definition>
						<!-- "group leader" definition is the value for displaying subordinates -->
						<subordinates active-value="show">
							<definition display-name="DirXMLjnsuNetworkDevice Base Container" dn-space="dirxml" dn-type="slash" name="networkdevice-container" type="dn">
								<description>Container used to discover and provision Network Devices.</description>
								<value><variable-ref var-name="DHCP.NetworkDevicesContainer"/></value>
							</definition>
						</subordinates>
					</group>
				</definitions>
			</configuration-values>
		</global-config-values>
		<application-schema/>
	</attributes>
	<children>
		<publisher name="Publisher">
			<attributes/>
			<children>
				<rule name="Matching Policy">
					<policy>
						<description>Publisher Matching Policy</description>
						<rule>
							<description>Match by DirXMLjnsuHWAddress for DirXMLjnsuNetworkDevice objects</description>
							<conditions>
								<and>
									<if-operation op="equal">add</if-operation>
									<if-class-name op="equal">DirXMLjnsuNetworkDevice</if-class-name>
									<if-op-attr name="DirXMLjnsuDeviceName" op="available"/>
								</and>
							</conditions>
							<actions>
								<do-find-matching-object scope="subordinates">
									<arg-dn>
										<token-global-variable name="networkdevice-container"/>
									</arg-dn>
									<arg-match-attr name="DirXMLjnsuDeviceName"/>
								</do-find-matching-object>
							</actions>
						</rule>
					</policy>
				</rule>
				<rule name="Placement Policy">
					<policy>
						<description>Publisher Placement Policy</description>
						<rule>
							<description>Place DirXMLjnsuNetworkDevice Objects in the Identity Vault</description>
							<conditions>
								<and>
									<if-class-name op="equal">DirXMLjnsuNetworkDevice</if-class-name>
								</and>
							</conditions>
							<actions>
								<do-set-op-dest-dn>
									<arg-dn>
										<token-global-variable name="networkdevice-container"/>
										<token-text xml:space="preserve">\</token-text>
										<token-lower-case>
											<token-src-name/>
										</token-lower-case>
									</arg-dn>
								</do-set-op-dest-dn>
							</actions>
						</rule>
					</policy>
				</rule>
			</children>
		</publisher>
		<subscriber name="Subscriber">
			<attributes/>
			<children>
				<rule name="Add all attributes to add and modify events">
					<policy>
						<rule>
							<description>Set required attributes</description>
							<conditions>
								<and>
									<if-operation op="equal">modify</if-operation>
								</and>
							</conditions>
							<actions>
								<do-set-dest-attr-value name="DirXMLjnsuDeviceName">
									<arg-value type="string">
										<token-src-attr name="DirXMLjnsuDeviceName"/>
									</arg-value>
								</do-set-dest-attr-value>
								<do-set-dest-attr-value name="DirXMLjnsuHWAddress">
									<arg-value type="string">
										<token-src-attr name="DirXMLjnsuHWAddress"/>
									</arg-value>
								</do-set-dest-attr-value>
								<do-set-dest-attr-value name="DirXMLjnsuDDNSPrefix">
									<arg-value type="string">
										<token-src-attr name="DirXMLjnsuDDNSPrefix"/>
									</arg-value>
								</do-set-dest-attr-value>
								<do-set-dest-attr-value name="DirXMLjnsuDisabled">
									<arg-value type="string">
										<token-src-attr name="DirXMLjnsuDisabled"/>
									</arg-value>
								</do-set-dest-attr-value>
								<do-set-dest-attr-value name="DirXMLjnsuRegVersion">
									<arg-value type="string">
										<token-src-attr name="DirXMLjnsuRegVersion"/>
									</arg-value>
								</do-set-dest-attr-value>
								<do-set-dest-attr-value name="DirXMLjnsuStaticAddr">
									<arg-value type="string">
										<token-src-attr name="DirXMLjnsuStaticAddr"/>
									</arg-value>
								</do-set-dest-attr-value>
								<do-for-each>
									<arg-node-set>
										<token-src-attr name="DirXMLjnsuStaticAddrs"/>
									</arg-node-set>
									<arg-actions>
										<do-add-dest-attr-value name="AllStaticAddrs">
											<arg-value>
												<token-xpath expression="$current-node//text()"/>
											</arg-value>
										</do-add-dest-attr-value>
									</arg-actions>
								</do-for-each>
							</actions>
						</rule>
					</policy>
				</rule>
				<rule name="Create Policy">
					<policy>
						<rule>
							<description>Require jnsuHWAddress Attribute</description>
							<conditions/>
							<actions>
								<do-veto-if-op-attr-not-available name="DirXMLjnsuHWAddress"/>
							</actions>
						</rule>
						<rule>
							<description>Require Reg Version = 1</description>
							<conditions>
								<and>
									<if-src-attr mode="numeric" name="DirXMLjnsuRegVersion" op="not-equal">1</if-src-attr>
								</and>
							</conditions>
							<actions>
								<do-veto/>
							</actions>
						</rule>
					</policy>
				</rule>
				<rule name="Event Transform Policy">
					<policy>
						<rule>
							<description>Container based scope filtering</description>
							<conditions>
								<and>
									<if-src-dn op="available"/>
									<if-src-dn op="not-in-subtree"/>
									<if-association op="not-associated"/>
								</and>
							</conditions>
							<actions>
								<do-veto/>
							</actions>
						</rule>
					</policy>
				</rule>
				<rule name="Matching Policy">
					<policy>
						<description>Subscriber Matching Policy</description>
						<rule>
							<description>Match by DirXMLjnsuHWAddress for jnsuNetworkDevice</description>
							<conditions>
								<and>
									<if-operation op="equal">add</if-operation>
									<if-class-name op="equal">DirXMLjnsuNetworkDevice</if-class-name>
									<if-op-attr name="DirXMLjnsuHWAddress" op="available"/>
								</and>
							</conditions>
							<actions>
								<do-find-matching-object scope="subtree">
									<arg-dn>
										<token-attr name="DirXMLjnsuHWAddress"/>
									</arg-dn>
									<arg-match-attr name="DirXMLjnsuHWAddress"/>
								</do-find-matching-object>
							</actions>
						</rule>
					</policy>
				</rule>
			</children>
		</subscriber>
		<rule name="Schema Mapping">
			<attr-name-map>
				<class-name>
					<app-name>DirXMLjnsuNetworkDevice</app-name>
					<nds-name>DirXMLjnsuNetworkDevice</nds-name>
				</class-name>
				<attr-name class-name="DirXMLjnsuNetworkDevice">
					<app-name>DirXMLjnsuDDNSPrefix</app-name>
					<nds-name>DirXMLjnsuDDNSPrefix</nds-name>
				</attr-name>
				<attr-name class-name="DirXMLjnsuNetworkDevice">
					<app-name>DirXMLjnsuDeviceName</app-name>
					<nds-name>DirXMLjnsuDeviceName</nds-name>
				</attr-name>
				<attr-name class-name="DirXMLjnsuNetworkDevice">
					<app-name>DirXMLjnsuHWAddress</app-name>
					<nds-name>DirXMLjnsuHWAddress</nds-name>
				</attr-name>
				<attr-name class-name="DirXMLjnsuNetworkDevice">
					<app-name>DirXMLjnsuMDisabled</app-name>
					<nds-name>DirXMLjnsuMDisabled</nds-name>
				</attr-name>
				<attr-name class-name="DirXMLjnsuNetworkDevice">
					<app-name>DirXMLjnsuDisabled</app-name>
					<nds-name>DirXMLjnsuDisabled</nds-name>
				</attr-name>
				<attr-name class-name="DirXMLjnsuNetworkDevice">
					<app-name>DirXMLjnsuNvrExpires</app-name>
					<nds-name>DirXMLjnsuNvrExpires</nds-name>
				</attr-name>
				<attr-name class-name="DirXMLjnsuNetworkDevice">
					<app-name>DirXMLjnsuRegVersion</app-name>
					<nds-name>DirXMLjnsuRegVersion</nds-name>
				</attr-name>
				<attr-name class-name="DirXMLjnsuNetworkDevice">
					<nds-name>DirXMLjnsuStaticAddr</nds-name>
					<app-name>DirXMLjnsuStaticAddr</app-name>
				</attr-name>
				<attr-name class-name="DirXMLjnsuNetworkDevice">
					<app-name>DirXMLjnsuStaticAddrs</app-name>
					<nds-name>DirXMLjnsuStaticAddrs</nds-name>
				</attr-name>
				<attr-name class-name="DirXMLjnsuNetworkDevice">
					<app-name>DirXMLjnsuDescription</app-name>
					<nds-name>DirXMLjnsuDescription</nds-name>
				</attr-name>
			</attr-name-map>
		</rule>
		<stylesheet name="Remove Duplicate dirXMLjnsuDHCPAddress values">
			<xsl:stylesheet exclude-result-prefixes="query cmd dncv" version="1.0" xmlns:cmd="http://www.novell.com/nxsl/java/com.novell.nds.dirxml.driver.XdsCommandProcessor" xmlns:dncv="http://www.novell.com/nxsl/java/com.novell.nds.dirxml.driver.DNConverter" xmlns:query="http://www.novell.com/nxsl/java/com.novell.nds.dirxml.driver.XdsQueryProcessor" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
				<!-- parameters passed in from the DirXML engine -->
				<xsl:param name="srcQueryProcessor"/>
				<xsl:param name="destQueryProcessor"/>
				<xsl:param name="srcCommandProcessor"/>
				<xsl:param name="destCommandProcessor"/>
				<xsl:param name="dnConverter"/>
				<xsl:param name="fromNds"/>
				<!-- identity transformation template -->
				<!-- in the absence of any other templates this will cause -->
				<!-- the stylesheet to copy the input through unchanged to the output -->
				<xsl:template match="node()|@*">
					<xsl:copy>
						<xsl:apply-templates select="@*|node()"/>
					</xsl:copy>
				</xsl:template>
				<xsl:template match="/nds/input/add[@class-name='DirXMLjnsuNetworkDevice']">
					<xsl:variable name="query-doc">
						<query scope="subtree">
							<search-attr attr-name="DirXMLjnsuDHCPAddress">
								<value type="string">
									<xsl:value-of select="/nds/input/add//add-attr[@attr-name='DirXMLjnsuDHCPAddress']/value"/>
								</value>
							</search-attr>
							<read-attr attr-name="DirXMLjnsuDHCPAddress"/>
							<read-attr attr-name="DirXMLjnsuHWAddress"/>
						</query>
					</xsl:variable>
					<xsl:variable name="operationHardwareAddress" select="/nds/input/add//add-attr[@attr-name='DirXMLjnsuHWAddress']/value"/>
					<xsl:variable name="result" select="query:query($destQueryProcessor,$query-doc)"/>
					<xsl:variable name="DestDN" select="$result//instance/@src-dn"/>
					<xsl:for-each select="$result//instance">
						<!-- Don't remove the dirXMLjnsuDHCPAddress attribute from the object that generated the event -->
						<xsl:variable name="hardwareAddress" select="attr[@attr-name='DirXMLjnsuHWAddress']/value"/>
						<xsl:message>The operationHardwareAddress is <xsl:value-of select="$operationHardwareAddress"/>
						</xsl:message>
						<xsl:message>The hardwareAddress is <xsl:value-of select="$hardwareAddress"/>
						</xsl:message>
						<xsl:if test="$operationHardwareAddress != $hardwareAddress">
							<xsl:element name="modify">
								<xsl:attribute name="class-name">DirXMLjnsuNetworkDevice</xsl:attribute>
								<xsl:attribute name="dest-dn">
									<xsl:value-of select="@src-dn"/>
								</xsl:attribute>
								<modify-attr attr-name="DirXMLjnsuDHCPAddress">
									<remove-all-values/>
								</modify-attr>
							</xsl:element>
						</xsl:if>
					</xsl:for-each>
					<xsl:copy>
						<xsl:apply-templates select="@*|node()"/>
					</xsl:copy>
				</xsl:template>
			</xsl:stylesheet>
		</stylesheet>
		<entitlement-definition name="ScriptingAccount">
			<entitlement conflict-resolution="union" description="User Account in Scripting Account" display-name="Scripting User Account">
				<interpretive-variables>
					<add-variable lossy="false" name="on-account-add"/>
					<remove-variable lossy="true" name="on-account-remove"/>
				</interpretive-variables>
			</entitlement>
		</entitlement-definition>
	</children>
	<global-config-values>
		<configuration-values>
			<definitions/>
		</configuration-values>
	</global-config-values>
</driver-configuration>
